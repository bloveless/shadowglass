// Code generated by protoc-gen-go-wasm. DO NOT EDIT.

package tradersv1

import (
	context "context"
	wazero "github.com/tetratelabs/wazero"
	api "github.com/tetratelabs/wazero/api"
	proto "google.golang.org/protobuf/proto"
	sync "sync"
)

type Logic interface {
	GetMyShips(request *GetMyShipsRequest) Ships
}

type staging struct {
	lock           sync.Mutex
	requestStaging map[string][]byte
}

func newStaging() staging {
	return staging{
		lock:           sync.Mutex{},
		requestStaging: make(map[string][]byte),
	}
}

func (s *staging) set(name string, value []byte) {
	s.lock.Lock()
	defer s.lock.Unlock()

	s.requestStaging[name] = value
}

func (s *staging) get(name string) []byte {
	s.lock.Lock()
	defer s.lock.Unlock()

	return s.requestStaging[name]
}

func AttachHostFunctions(ctx context.Context, runtime wazero.Runtime, logic Logic) error {
	staging := newStaging()
	_, err := runtime.NewHostModuleBuilder("env").
		NewFunctionBuilder().
		WithGoModuleFunction(api.GoModuleFunc(func(ctx context.Context, m api.Module, stack []uint64) {
			var req GetMyShipsRequest
			if stack[0] > 0 {
				reqPtr := stack[0]
				reqLen := stack[1]
				reqBytes, ok := m.Memory().Read(uint32(reqPtr), uint32(reqLen))
				if ok == false {
					panic("unable to read memory")
				}
				err := proto.Unmarshal(reqBytes, &req)
				if err != nil {
					panic(err)
				}
			}
			var err error

			ships := logic.GetMyShips(&req)

			shipsBytes, err := proto.Marshal(&ships)
			if err != nil {
				panic(err)
			}

			staging.set(m.Name(), shipsBytes)

			stack[0] = api.EncodeI64(int64(len(shipsBytes)))
		}), []api.ValueType{api.ValueTypeI32, api.ValueTypeI32}, []api.ValueType{api.ValueTypeI32}).
		Export("send_get_my_ships_request_to_host").
		NewFunctionBuilder().
		WithGoModuleFunction(api.GoModuleFunc(func(ctx context.Context, m api.Module, stack []uint64) {
			ptr := stack[0]

			shipsBytes := staging.get(m.Name())

			if ok := m.Memory().Write(uint32(ptr), shipsBytes); !ok {
				panic("Tried to write out of range")
			}
		}), []api.ValueType{api.ValueTypeI32}, []api.ValueType{}).
		Export("retrieve_get_my_ships_response_from_host").
		Instantiate(ctx)

	return err
}
